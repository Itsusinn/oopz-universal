name: Build App
on:
  schedule: [{cron: "0 0 * * *"}]
  workflow_dispatch:
  push:
    branches: ["master", "main"]
env:
  APP_NAME: "oopz"
  URL: "https://web.oopz.cn/#/?initArea"
  WIDTH: "1200"
  HEIGHT: "780"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  compile:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain || 'stable' }}
          target: ${{ matrix.target }}

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.target }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.target }}
            
      - name: Install pake-cli local
        shell: bash
        run: |
          echo "install pake on local"
          npm install pake-cli

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev gnome-video-effects gnome-video-effects-extra
          version: 1.1

      - name: Install dependencies
        run: |
          npm install shelljs
          npm install axios

      - name: Build with pake-cli
        run: |
          node ./script/build_with_pake_cli.mjs
        env:
          URL: ${{ env.URL }}
          NAME: ${{ env.APP_NAME }}
          # ICON: ${{ inputs.icon }}
          HEIGHT: ${{ env.HEIGHT }}
          WIDTH: ${{ env.WIDTH }}
          # TRANSPARENT: ${{ inputs.transparent }}
          # FULLSCREEN: ${{ inputs.fullscreen }}
          # RESIZE: ${{ inputs.resize }}
          # MULTI_ARCH: ${{ inputs.multi_arch }}
          # TARGETS: ${{ inputs.targets }}
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: 'node_modules/pake-cli/output/*'
  release:
    name: Release
    needs: [compile]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Merge binaries
        uses: actions/upload-artifact/merge@v4
        with:
          name: binaries
          pattern: '*'
          retention-days: 1

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./packages

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'packages/*'
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "latest"
          prerelease: true
          removeArtifacts: true
          allowUpdates: true
